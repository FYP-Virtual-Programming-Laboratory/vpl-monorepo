import { Header } from "@/components/header"
import { IndividualGradingContent } from "@/components/individual-grading-content"
import { notFound } from "next/navigation"

interface IndividualGradingPageProps {
  params: {
    id: string
    studentId: string
  }
}

// Mock data for individual student grading with collaborative features
const getStudentGradingData = (sessionId: string, studentId: string) => {
  const gradingData: Record<string, any> = {
    "1-1": {
      student: {
        id: "1",
        name: "John Smith",
        email: "johnsmith@example.com",
        matricNumber: "CSC/2021/001",
        avatar: "JS",
        avatarColor: "bg-blue-500",
      },
      session: {
        id: "1",
        title: "Collaborative Data Structures Project",
        courseCode: "CSC301",
        isCollaborative: true,
        teamSize: 3,
        collaborationType: "GROUP_PROJECT",
      },
      team: {
        id: "team-alpha",
        name: "Team Alpha",
        members: [
          {
            id: "1",
            name: "John Smith",
            email: "johnsmith@example.com",
            avatar: "JS",
            avatarColor: "bg-blue-500",
            role: "LEADER",
            contributionScore: 85,
            peerRating: 4.5,
          },
          {
            id: "2",
            name: "Sarah Johnson",
            email: "sarah@example.com",
            avatar: "SJ",
            avatarColor: "bg-purple-500",
            role: "MEMBER",
            contributionScore: 78,
            peerRating: 4.2,
          },
          {
            id: "3",
            name: "Mike Chen",
            email: "mike@example.com",
            avatar: "MC",
            avatarColor: "bg-green-500",
            role: "MEMBER",
            contributionScore: 82,
            peerRating: 4.3,
          },
        ],
        overallTeamScore: 88,
        collaborationScore: 85,
      },
      submission: {
        id: "SUB-78923",
        submittedAt: "May 15, 2023 at 14:32",
        lastUpdated: "May 15, 2023 at 14:32",
        isTeamSubmission: true,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Advanced Data Structures Implementation",
          description:
            "Collaborative implementation of advanced data structures including AVL trees, hash tables, and graph algorithms with peer programming and code review.",
          testCases: [
            {
              id: "1",
              name: "AVL Tree Insertion",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.03s",
              input: "[10, 5, 15, 3, 7, 12, 18]",
              expectedOutput: "Balanced AVL tree",
              actualOutput: "Balanced AVL tree",
              exitCode: 0,
              contributedBy: "John Smith",
            },
            {
              id: "2",
              name: "AVL Tree Deletion",
              status: "Passed",
              score: 12,
              maxScore: 15,
              time: "0.04s",
              input: "Delete node 5",
              expectedOutput: "Rebalanced tree",
              actualOutput: "Rebalanced tree",
              exitCode: 0,
              contributedBy: "Sarah Johnson",
            },
            {
              id: "3",
              name: "Hash Table Operations",
              status: "Passed",
              score: 20,
              maxScore: 20,
              time: "0.02s",
              input: "Insert, search, delete operations",
              expectedOutput: "All operations successful",
              actualOutput: "All operations successful",
              exitCode: 0,
              contributedBy: "Mike Chen",
            },
            {
              id: "4",
              name: "Graph BFS Traversal",
              status: "Passed",
              score: 18,
              maxScore: 20,
              time: "0.15s",
              input: "Graph with 10 nodes",
              expectedOutput: "Correct BFS order",
              actualOutput: "Correct BFS order",
              exitCode: 0,
              contributedBy: "John Smith",
            },
            {
              id: "5",
              name: "Graph DFS Traversal",
              status: "Failed",
              score: 5,
              maxScore: 20,
              time: "0.12s",
              input: "Graph with cycles",
              expectedOutput: "Correct DFS with cycle detection",
              actualOutput: "Stack overflow error",
              exitCode: 1,
              error: "RecursionError: maximum recursion depth exceeded",
              contributedBy: "Sarah Johnson",
            },
            {
              id: "6",
              name: "Dijkstra's Algorithm",
              status: "Partial",
              score: 15,
              maxScore: 20,
              time: "0.25s",
              input: "Weighted graph shortest path",
              expectedOutput: "Optimal path found",
              actualOutput: "Suboptimal path found",
              exitCode: 0,
              contributedBy: "Mike Chen",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Strong individual contribution to the team project. Excellent leadership in graph algorithms implementation.",
              icon: "ðŸ¤–",
            },
            {
              type: "collaboration",
              title: "Collaboration Assessment",
              content:
                "Demonstrated excellent teamwork and mentoring skills. Took initiative in complex algorithm implementations.",
              icon: "ðŸ‘¥",
            },
            {
              type: "code-quality",
              title: "Code Quality",
              content: "Well-structured and documented code. Good use of design patterns and optimization techniques.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 85,
      totalScore: 100,
      individualContributionScore: 85,
      exerciseContributions: [
        {
          exerciseId: "avl-trees",
          exerciseTitle: "AVL Trees",
          individualScore: 90,
          teamScore: 88,
          contributionPercentage: 85,
          linesOfCode: 245,
          commits: 12,
          testCasesWritten: 8,
          codeReviews: 3,
          collaborationRating: 4.5,
          specificContributions: [
            "Implemented AVL tree insertion with rotation logic",
            "Created comprehensive test cases for edge cases",
            "Led code review sessions for tree balancing",
            "Optimized rotation algorithms for better performance",
          ],
        },
        {
          exerciseId: "hash-tables",
          exerciseTitle: "Hash Tables",
          individualScore: 75,
          teamScore: 85,
          contributionPercentage: 60,
          linesOfCode: 180,
          commits: 8,
          testCasesWritten: 5,
          codeReviews: 2,
          collaborationRating: 4.0,
          specificContributions: [
            "Implemented basic hash table structure",
            "Contributed to collision resolution strategy",
            "Reviewed and tested hash function implementations",
          ],
        },
        {
          exerciseId: "graph-algorithms",
          exerciseTitle: "Graph Algorithms",
          individualScore: 88,
          teamScore: 82,
          contributionPercentage: 90,
          linesOfCode: 320,
          commits: 15,
          testCasesWritten: 12,
          codeReviews: 5,
          collaborationRating: 4.8,
          specificContributions: [
            "Designed and implemented BFS traversal algorithm",
            "Created graph representation data structure",
            "Implemented Dijkstra's algorithm with priority queue",
            "Mentored team members on graph theory concepts",
            "Created comprehensive documentation and examples",
          ],
        },
      ],
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Strong overall performance in the session. Demonstrated excellent problem-solving and collaboration skills.",
          icon: "ðŸŒŸ",
        },
      ],
      collaborationFeedback: {
        teamworkScore: 88,
        communicationScore: 92,
        leadershipScore: 85,
        peerReviews: [
          {
            fromStudent: "Sarah Johnson",
            rating: 5,
            comment:
              "John was an excellent team leader. He helped me understand complex algorithms and was always available for questions.",
          },
          {
            fromStudent: "Mike Chen",
            rating: 4,
            comment:
              "Great collaboration on the graph algorithms. John's expertise in data structures really helped the team succeed.",
          },
        ],
      },
      finalScore: 85,
    },
    "1-2": {
      student: {
        id: "2",
        name: "Sarah Johnson",
        email: "sarah@example.com",
        matricNumber: "CSC/2021/045",
        avatar: "SJ",
        avatarColor: "bg-purple-500",
      },
      session: {
        id: "1",
        title: "Individual Algorithm Challenge",
        courseCode: "CSC301",
        isCollaborative: false,
      },
      submission: {
        id: "SUB-78924",
        submittedAt: "May 15, 2023 at 16:45",
        lastUpdated: "May 15, 2023 at 16:45",
        isTeamSubmission: false,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Binary Search Tree Implementation",
          description:
            "Individual implementation of a binary search tree with insertion, deletion, and search operations. Handle edge cases and maintain BST properties.",
          testCases: [
            {
              id: "1",
              name: "Basic Insertion",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.02s",
              input: "[10, 5, 15, 3, 7]",
              expectedOutput: "Valid BST structure",
              actualOutput: "Valid BST structure",
              exitCode: 0,
            },
            {
              id: "2",
              name: "Search Operations",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.01s",
              input: "Search for 7",
              expectedOutput: "Found: 7",
              actualOutput: "Found: 7",
              exitCode: 0,
            },
            {
              id: "3",
              name: "Deletion - Leaf Node",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.02s",
              input: "Delete 3",
              expectedOutput: "Valid BST without 3",
              actualOutput: "Valid BST without 3",
              exitCode: 0,
            },
            {
              id: "4",
              name: "Deletion - One Child",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.03s",
              input: "Delete 5",
              expectedOutput: "Valid BST structure maintained",
              actualOutput: "Valid BST structure maintained",
              exitCode: 0,
            },
            {
              id: "5",
              name: "Deletion - Two Children",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.04s",
              input: "Delete 10 (root)",
              expectedOutput: "Valid BST with new root",
              actualOutput: "Valid BST with new root",
              exitCode: 0,
            },
            {
              id: "6",
              name: "Edge Cases",
              status: "Partial",
              score: 16,
              maxScore: 25,
              time: "0.05s",
              input: "Empty tree operations",
              expectedOutput: "Proper edge case handling",
              actualOutput: "Some edge cases not handled",
              exitCode: 0,
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Excellent BST implementation with proper handling of most operations. Minor issues with edge case handling.",
              icon: "ðŸ¤–",
            },
            {
              type: "performance",
              title: "Performance Analysis",
              content: "All operations maintain O(log n) average time complexity. Well-optimized implementation.",
              icon: "âš¡",
            },
            {
              type: "code-quality",
              title: "Code Quality Assessment",
              content: "Clean, well-documented code with good separation of concerns. Excellent use of recursion.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 91,
      totalScore: 100,
      individualContributionScore: 91,
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Strong overall performance in the session. Demonstrated excellent problem-solving and implementation skills.",
          icon: "ðŸŒŸ",
        },
      ],
      finalScore: 91,
    },
    "3-17": {
      student: {
        id: "17",
        name: "Noah Williams",
        email: "noahwilliams@example.com",
        matricNumber: "CSC/2021/017",
        avatar: "NW",
        avatarColor: "bg-blue-500",
      },
      session: {
        id: "3",
        title: "Algorithms Weekly Task",
        courseCode: "CSC502",
        isCollaborative: false,
      },
      submission: {
        id: "SUB-89012",
        submittedAt: "February 5, 2025 at 14:30",
        lastUpdated: "February 5, 2025 at 14:30",
        isTeamSubmission: false,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Advanced Algorithm Implementation",
          description:
            "Individual implementation of sorting algorithms, dynamic programming solutions, and graph traversal algorithms with optimization focus.",
          testCases: [
            {
              id: "1",
              name: "Quick Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.02s",
              input: "[64, 34, 25, 12, 22, 11, 90]",
              expectedOutput: "[11, 12, 22, 25, 34, 64, 90]",
              actualOutput: "[11, 12, 22, 25, 34, 64, 90]",
              exitCode: 0,
            },
            {
              id: "2",
              name: "Merge Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.03s",
              input: "[38, 27, 43, 3, 9, 82, 10]",
              expectedOutput: "[3, 9, 10, 27, 38, 43, 82]",
              actualOutput: "[3, 9, 10, 27, 38, 43, 82]",
              exitCode: 0,
            },
            {
              id: "3",
              name: "Fibonacci DP Solution",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.01s",
              input: "n = 40",
              expectedOutput: "102334155",
              actualOutput: "102334155",
              exitCode: 0,
            },
            {
              id: "4",
              name: "Longest Common Subsequence",
              status: "Passed",
              score: 13,
              maxScore: 13,
              time: "0.04s",
              input: "ABCDGH, AEDFHR",
              expectedOutput: "ADH (length: 3)",
              actualOutput: "ADH (length: 3)",
              exitCode: 0,
            },
            {
              id: "5",
              name: "Knapsack Problem",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.05s",
              input: "weights=[10,20,30], values=[60,100,120], capacity=50",
              expectedOutput: "220",
              actualOutput: "220",
              exitCode: 0,
            },
            {
              id: "6",
              name: "BFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.03s",
              input: "Graph with 6 nodes",
              expectedOutput: "Correct BFS order",
              actualOutput: "Correct BFS order",
              exitCode: 0,
            },
            {
              id: "7",
              name: "DFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.02s",
              input: "Graph with cycles",
              expectedOutput: "Correct DFS with cycle detection",
              actualOutput: "Correct DFS with cycle detection",
              exitCode: 0,
            },
            {
              id: "8",
              name: "Dijkstra's Shortest Path",
              status: "Passed",
              score: 9,
              maxScore: 9,
              time: "0.06s",
              input: "Weighted graph",
              expectedOutput: "Optimal shortest paths",
              actualOutput: "Optimal shortest paths",
              exitCode: 0,
            },
            {
              id: "9",
              name: "Performance Optimization",
              status: "Partial",
              score: 2,
              maxScore: 10,
              time: "0.15s",
              input: "Large dataset performance test",
              expectedOutput: "Sub-linear time complexity",
              actualOutput: "Slightly above expected time",
              exitCode: 0,
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Excellent implementation of all core algorithms with correct logic and good code structure. Minor performance optimization needed for large datasets.",
              icon: "ðŸ¤–",
            },
            {
              type: "performance",
              title: "Performance Analysis",
              content:
                "All algorithms implemented with correct time complexity. Some optimization opportunities for large inputs.",
              icon: "âš¡",
            },
            {
              type: "code-quality",
              title: "Code Quality Assessment",
              content:
                "Clean, well-documented code with excellent algorithmic understanding. Good use of dynamic programming principles.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 92,
      totalScore: 100,
      individualContributionScore: 92,
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Strong overall performance in the session. Demonstrated excellent problem-solving and implementation skills.",
          icon: "ðŸŒŸ",
        },
      ],
      finalScore: 92,
    },
    "3-18": {
      student: {
        id: "18",
        name: "Emma Davis",
        email: "emmadavis@example.com",
        matricNumber: "CSC/2021/018",
        avatar: "ED",
        avatarColor: "bg-purple-500",
      },
      session: {
        id: "3",
        title: "Algorithms Weekly Task",
        courseCode: "CSC502",
        isCollaborative: false,
      },
      submission: {
        id: "SUB-89013",
        submittedAt: "February 5, 2025 at 15:45",
        lastUpdated: "February 5, 2025 at 15:45",
        isTeamSubmission: false,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Advanced Algorithm Implementation",
          description:
            "Individual implementation of sorting algorithms, dynamic programming solutions, and graph traversal algorithms with optimization focus.",
          testCases: [
            {
              id: "1",
              name: "Quick Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.03s",
              input: "[64, 34, 25, 12, 22, 11, 90]",
              expectedOutput: "[11, 12, 22, 25, 34, 64, 90]",
              actualOutput: "[11, 12, 22, 25, 34, 64, 90]",
              exitCode: 0,
            },
            {
              id: "2",
              name: "Merge Sort Implementation",
              status: "Passed",
              score: 12,
              maxScore: 15,
              time: "0.05s",
              input: "[38, 27, 43, 3, 9, 82, 10]",
              expectedOutput: "[3, 9, 10, 27, 38, 43, 82]",
              actualOutput: "[3, 9, 10, 27, 38, 43, 82]",
              exitCode: 0,
            },
            {
              id: "3",
              name: "Fibonacci DP Solution",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.01s",
              input: "n = 40",
              expectedOutput: "102334155",
              actualOutput: "102334155",
              exitCode: 0,
            },
            {
              id: "4",
              name: "Longest Common Subsequence",
              status: "Partial",
              score: 8,
              maxScore: 13,
              time: "0.08s",
              input: "ABCDGH, AEDFHR",
              expectedOutput: "ADH (length: 3)",
              actualOutput: "AD (length: 2)",
              exitCode: 0,
            },
            {
              id: "5",
              name: "Knapsack Problem",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.06s",
              input: "weights=[10,20,30], values=[60,100,120], capacity=50",
              expectedOutput: "220",
              actualOutput: "220",
              exitCode: 0,
            },
            {
              id: "6",
              name: "BFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.04s",
              input: "Graph with 6 nodes",
              expectedOutput: "Correct BFS order",
              actualOutput: "Correct BFS order",
              exitCode: 0,
            },
            {
              id: "7",
              name: "DFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.03s",
              input: "Graph with cycles",
              expectedOutput: "Correct DFS with cycle detection",
              actualOutput: "Correct DFS with cycle detection",
              exitCode: 0,
            },
            {
              id: "8",
              name: "Dijkstra's Shortest Path",
              status: "Passed",
              score: 9,
              maxScore: 9,
              time: "0.07s",
              input: "Weighted graph",
              expectedOutput: "Optimal shortest paths",
              actualOutput: "Optimal shortest paths",
              exitCode: 0,
            },
            {
              id: "9",
              name: "Performance Optimization",
              status: "Failed",
              score: 5,
              maxScore: 10,
              time: "0.25s",
              input: "Large dataset performance test",
              expectedOutput: "Sub-linear time complexity",
              actualOutput: "Timeout on large inputs",
              exitCode: 1,
              error: "Time limit exceeded",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Good implementation of most algorithms with correct logic. Some issues with optimization and edge cases in dynamic programming.",
              icon: "ðŸ¤–",
            },
            {
              type: "performance",
              title: "Performance Analysis",
              content:
                "Most algorithms implemented correctly but need optimization for large datasets. Time complexity issues noted.",
              icon: "âš¡",
            },
            {
              type: "code-quality",
              title: "Code Quality Assessment",
              content:
                "Well-structured code with good understanding of algorithms. Could improve efficiency in some implementations.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 87,
      totalScore: 100,
      individualContributionScore: 87,
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Solid overall performance in the session. Demonstrated good problem-solving skills with some areas for optimization.",
          icon: "ðŸŒŸ",
        },
      ],
      finalScore: 87,
    },
    "3-19": {
      student: {
        id: "19",
        name: "Liam Miller",
        email: "liammiller@example.com",
        matricNumber: "CSC/2021/019",
        avatar: "LM",
        avatarColor: "bg-green-500",
      },
      session: {
        id: "3",
        title: "Algorithms Weekly Task",
        courseCode: "CSC502",
        isCollaborative: false,
      },
      submission: {
        id: "SUB-89014",
        submittedAt: "February 5, 2025 at 16:20",
        lastUpdated: "February 5, 2025 at 16:20",
        isTeamSubmission: false,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Advanced Algorithm Implementation",
          description:
            "Individual implementation of sorting algorithms, dynamic programming solutions, and graph traversal algorithms with optimization focus.",
          testCases: [
            {
              id: "1",
              name: "Quick Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.02s",
              input: "[64, 34, 25, 12, 22, 11, 90]",
              expectedOutput: "[11, 12, 22, 25, 34, 64, 90]",
              actualOutput: "[11, 12, 22, 25, 34, 64, 90]",
              exitCode: 0,
            },
            {
              id: "2",
              name: "Merge Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.04s",
              input: "[38, 27, 43, 3, 9, 82, 10]",
              expectedOutput: "[3, 9, 10, 27, 38, 43, 82]",
              actualOutput: "[3, 9, 10, 27, 38, 43, 82]",
              exitCode: 0,
            },
            {
              id: "3",
              name: "Fibonacci DP Solution",
              status: "Passed",
              score: 10,
              maxScore: 12,
              time: "0.02s",
              input: "n = 40",
              expectedOutput: "102334155",
              actualOutput: "102334155",
              exitCode: 0,
            },
            {
              id: "4",
              name: "Longest Common Subsequence",
              status: "Partial",
              score: 7,
              maxScore: 13,
              time: "0.10s",
              input: "ABCDGH, AEDFHR",
              expectedOutput: "ADH (length: 3)",
              actualOutput: "AD (length: 2)",
              exitCode: 0,
            },
            {
              id: "5",
              name: "Knapsack Problem",
              status: "Passed",
              score: 8,
              maxScore: 10,
              time: "0.08s",
              input: "weights=[10,20,30], values=[60,100,120], capacity=50",
              expectedOutput: "220",
              actualOutput: "220",
              exitCode: 0,
            },
            {
              id: "6",
              name: "BFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.05s",
              input: "Graph with 6 nodes",
              expectedOutput: "Correct BFS order",
              actualOutput: "Correct BFS order",
              exitCode: 0,
            },
            {
              id: "7",
              name: "DFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.04s",
              input: "Graph with cycles",
              expectedOutput: "Correct DFS with cycle detection",
              actualOutput: "Correct DFS with cycle detection",
              exitCode: 0,
            },
            {
              id: "8",
              name: "Dijkstra's Shortest Path",
              status: "Partial",
              score: 6,
              maxScore: 9,
              time: "0.12s",
              input: "Weighted graph",
              expectedOutput: "Optimal shortest paths",
              actualOutput: "Suboptimal paths found",
              exitCode: 0,
            },
            {
              id: "9",
              name: "Performance Optimization",
              status: "Failed",
              score: 8,
              maxScore: 10,
              time: "0.20s",
              input: "Large dataset performance test",
              expectedOutput: "Sub-linear time complexity",
              actualOutput: "Above expected time but functional",
              exitCode: 0,
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Solid implementation of sorting algorithms with good understanding. Dynamic programming and graph algorithms need improvement.",
              icon: "ðŸ¤–",
            },
            {
              type: "performance",
              title: "Performance Analysis",
              content:
                "Good performance on basic algorithms. Optimization needed for complex dynamic programming and graph problems.",
              icon: "âš¡",
            },
            {
              type: "code-quality",
              title: "Code Quality Assessment",
              content: "Clean code structure with room for improvement in algorithmic efficiency and edge case handling.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 85,
      totalScore: 100,
      individualContributionScore: 85,
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Good overall performance in the session. Some areas for improvement in advanced algorithms and optimization.",
          icon: "ðŸŒŸ",
        },
      ],
      finalScore: 85,
    },
    "3-20": {
      student: {
        id: "20",
        name: "Ava Wilson",
        email: "avawilson@example.com",
        matricNumber: "CSC/2021/020",
        avatar: "AW",
        avatarColor: "bg-pink-500",
      },
      session: {
        id: "3",
        title: "Algorithms Weekly Task",
        courseCode: "CSC502",
        isCollaborative: false,
      },
      submission: {
        id: "SUB-89015",
        submittedAt: "February 5, 2025 at 13:15",
        lastUpdated: "February 5, 2025 at 13:15",
        isTeamSubmission: false,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Advanced Algorithm Implementation",
          description:
            "Individual implementation of sorting algorithms, dynamic programming solutions, and graph traversal algorithms with optimization focus.",
          testCases: [
            {
              id: "1",
              name: "Quick Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.02s",
              input: "[64, 34, 25, 12, 22, 11, 90]",
              expectedOutput: "[11, 12, 22, 25, 34, 64, 90]",
              actualOutput: "[11, 12, 22, 25, 34, 64, 90]",
              exitCode: 0,
            },
            {
              id: "2",
              name: "Merge Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.03s",
              input: "[38, 27, 43, 3, 9, 82, 10]",
              expectedOutput: "[3, 9, 10, 27, 38, 43, 82]",
              actualOutput: "[3, 9, 10, 27, 38, 43, 82]",
              exitCode: 0,
            },
            {
              id: "3",
              name: "Fibonacci DP Solution",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.01s",
              input: "n = 40",
              expectedOutput: "102334155",
              actualOutput: "102334155",
              exitCode: 0,
            },
            {
              id: "4",
              name: "Longest Common Subsequence",
              status: "Passed",
              score: 13,
              maxScore: 13,
              time: "0.04s",
              input: "ABCDGH, AEDFHR",
              expectedOutput: "ADH (length: 3)",
              actualOutput: "ADH (length: 3)",
              exitCode: 0,
            },
            {
              id: "5",
              name: "Knapsack Problem",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.05s",
              input: "weights=[10,20,30], values=[60,100,120], capacity=50",
              expectedOutput: "220",
              actualOutput: "220",
              exitCode: 0,
            },
            {
              id: "6",
              name: "BFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.03s",
              input: "Graph with 6 nodes",
              expectedOutput: "Correct BFS order",
              actualOutput: "Correct BFS order",
              exitCode: 0,
            },
            {
              id: "7",
              name: "DFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.02s",
              input: "Graph with cycles",
              expectedOutput: "Correct DFS with cycle detection",
              actualOutput: "Correct DFS with cycle detection",
              exitCode: 0,
            },
            {
              id: "8",
              name: "Dijkstra's Shortest Path",
              status: "Passed",
              score: 9,
              maxScore: 9,
              time: "0.06s",
              input: "Weighted graph",
              expectedOutput: "Optimal shortest paths",
              actualOutput: "Optimal shortest paths",
              exitCode: 0,
            },
            {
              id: "9",
              name: "Performance Optimization",
              status: "Failed",
              score: 0,
              maxScore: 10,
              time: "0.30s",
              input: "Large dataset performance test",
              expectedOutput: "Sub-linear time complexity",
              actualOutput: "Timeout exceeded",
              exitCode: 1,
              error: "Time limit exceeded on large dataset",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Excellent implementation of all core algorithms with perfect accuracy. Performance optimization for large datasets needs attention.",
              icon: "ðŸ¤–",
            },
            {
              type: "performance",
              title: "Performance Analysis",
              content:
                "Perfect implementation of all algorithms with correct time complexity. Large dataset optimization is the only area for improvement.",
              icon: "âš¡",
            },
            {
              type: "code-quality",
              title: "Code Quality Assessment",
              content: "Outstanding code quality with excellent algorithmic understanding and clean implementation.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 90,
      totalScore: 100,
      individualContributionScore: 90,
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Outstanding overall performance in the session. Demonstrated exceptional problem-solving and implementation skills.",
          icon: "ðŸŒŸ",
        },
      ],
      finalScore: 90,
    },
    "3-21": {
      student: {
        id: "21",
        name: "William Brown",
        email: "williambrown@example.com",
        matricNumber: "CSC/2021/021",
        avatar: "WB",
        avatarColor: "bg-yellow-500",
      },
      session: {
        id: "3",
        title: "Algorithms Weekly Task",
        courseCode: "CSC502",
        isCollaborative: false,
      },
      submission: {
        id: "SUB-89016",
        submittedAt: "February 5, 2025 at 17:00",
        lastUpdated: "February 5, 2025 at 17:00",
        isTeamSubmission: false,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Advanced Algorithm Implementation",
          description:
            "Individual implementation of sorting algorithms, dynamic programming solutions, and graph traversal algorithms with optimization focus.",
          testCases: [
            {
              id: "1",
              name: "Quick Sort Implementation",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.03s",
              input: "[64, 34, 25, 12, 22, 11, 90]",
              expectedOutput: "[11, 12, 22, 25, 34, 64, 90]",
              actualOutput: "[11, 12, 22, 25, 34, 64, 90]",
              exitCode: 0,
            },
            {
              id: "2",
              name: "Merge Sort Implementation",
              status: "Passed",
              score: 13,
              maxScore: 15,
              time: "0.06s",
              input: "[38, 27, 43, 3, 9, 82, 10]",
              expectedOutput: "[3, 9, 10, 27, 38, 43, 82]",
              actualOutput: "[3, 9, 10, 27, 38, 43, 82]",
              exitCode: 0,
            },
            {
              id: "3",
              name: "Fibonacci DP Solution",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.01s",
              input: "n = 40",
              expectedOutput: "102334155",
              actualOutput: "102334155",
              exitCode: 0,
            },
            {
              id: "4",
              name: "Longest Common Subsequence",
              status: "Passed",
              score: 11,
              maxScore: 13,
              time: "0.07s",
              input: "ABCDGH, AEDFHR",
              expectedOutput: "ADH (length: 3)",
              actualOutput: "ADH (length: 3)",
              exitCode: 0,
            },
            {
              id: "5",
              name: "Knapsack Problem",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.06s",
              input: "weights=[10,20,30], values=[60,100,120], capacity=50",
              expectedOutput: "220",
              actualOutput: "220",
              exitCode: 0,
            },
            {
              id: "6",
              name: "BFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.04s",
              input: "Graph with 6 nodes",
              expectedOutput: "Correct BFS order",
              actualOutput: "Correct BFS order",
              exitCode: 0,
            },
            {
              id: "7",
              name: "DFS Graph Traversal",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.03s",
              input: "Graph with cycles",
              expectedOutput: "Correct DFS with cycle detection",
              actualOutput: "Correct DFS with cycle detection",
              exitCode: 0,
            },
            {
              id: "8",
              name: "Dijkstra's Shortest Path",
              status: "Partial",
              score: 7,
              maxScore: 9,
              time: "0.10s",
              input: "Weighted graph",
              expectedOutput: "Optimal shortest paths",
              actualOutput: "Near-optimal paths found",
              exitCode: 0,
            },
            {
              id: "9",
              name: "Performance Optimization",
              status: "Partial",
              score: 2,
              maxScore: 10,
              time: "0.18s",
              input: "Large dataset performance test",
              expectedOutput: "Sub-linear time complexity",
              actualOutput: "Functional but slow on large inputs",
              exitCode: 0,
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Good implementation of most algorithms with solid understanding. Some optimization needed for complex problems and large datasets.",
              icon: "ðŸ¤–",
            },
            {
              type: "performance",
              title: "Performance Analysis",
              content:
                "Correct implementation of algorithms with room for performance improvements in graph algorithms and optimization.",
              icon: "âš¡",
            },
            {
              type: "code-quality",
              title: "Code Quality Assessment",
              content:
                "Well-structured code with good algorithmic foundation. Could benefit from more efficient implementations.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 86,
      totalScore: 100,
      individualContributionScore: 86,
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Good overall performance in the session. Some areas for improvement in advanced algorithms and optimization.",
          icon: "ðŸŒŸ",
        },
      ],
      finalScore: 86,
    },
    "4-s1": {
      student: {
        id: "s1",
        name: "Alice Johnson",
        email: "alice@example.com",
        matricNumber: "CSC/2021/234",
        avatar: "AJ",
        avatarColor: "bg-blue-500",
      },
      session: {
        id: "4",
        title: "Web Development Team Project",
        courseCode: "CSC411",
        isCollaborative: true,
        teamSize: 4,
        collaborationType: "GROUP_PROJECT",
      },
      team: {
        id: "team-beta",
        name: "Team Beta",
        members: [
          {
            id: "s1",
            name: "Alice Johnson",
            email: "alice@example.com",
            avatar: "AJ",
            avatarColor: "bg-blue-500",
            role: "LEADER",
            contributionScore: 92,
            peerRating: 4.8,
          },
          {
            id: "s2",
            name: "Bob Smith",
            email: "bob@example.com",
            avatar: "BS",
            avatarColor: "bg-green-500",
            role: "MEMBER",
            contributionScore: 85,
            peerRating: 4.3,
          },
          {
            id: "s3",
            name: "Charlie Brown",
            email: "charlie@example.com",
            avatar: "CB",
            avatarColor: "bg-purple-500",
            role: "MEMBER",
            contributionScore: 78,
            peerRating: 4.1,
          },
          {
            id: "s4",
            name: "Diana Prince",
            email: "diana@example.com",
            avatar: "DP",
            avatarColor: "bg-pink-500",
            role: "MEMBER",
            contributionScore: 88,
            peerRating: 4.5,
          },
        ],
        overallTeamScore: 91,
        collaborationScore: 89,
      },
      submission: {
        id: "SUB-91234",
        submittedAt: "June 10, 2023 at 16:45",
        lastUpdated: "June 10, 2023 at 16:45",
        isTeamSubmission: true,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Full-Stack E-commerce Application",
          description:
            "Collaborative development of a full-stack e-commerce web application with React frontend, Node.js backend, and database integration. Includes user authentication, product management, and payment processing.",
          testCases: [
            {
              id: "1",
              name: "User Authentication",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.15s",
              input: "Login/Register functionality",
              expectedOutput: "Secure authentication flow",
              actualOutput: "Secure authentication flow",
              exitCode: 0,
              contributedBy: "Alice Johnson",
            },
            {
              id: "2",
              name: "Product Catalog Display",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.08s",
              input: "Product listing with pagination",
              expectedOutput: "Responsive product grid",
              actualOutput: "Responsive product grid",
              exitCode: 0,
              contributedBy: "Bob Smith",
            },
            {
              id: "3",
              name: "Shopping Cart Functionality",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.12s",
              input: "Add/remove items, quantity updates",
              expectedOutput: "Functional shopping cart",
              actualOutput: "Functional shopping cart",
              exitCode: 0,
              contributedBy: "Charlie Brown",
            },
            {
              id: "4",
              name: "Payment Processing",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.25s",
              input: "Stripe payment integration",
              expectedOutput: "Secure payment flow",
              actualOutput: "Secure payment flow",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
            {
              id: "5",
              name: "Order Management",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.18s",
              input: "Order creation and tracking",
              expectedOutput: "Complete order workflow",
              actualOutput: "Complete order workflow",
              exitCode: 0,
              contributedBy: "Alice Johnson",
            },
            {
              id: "6",
              name: "Admin Dashboard",
              status: "Partial",
              score: 7,
              maxScore: 10,
              time: "0.20s",
              input: "Product management interface",
              expectedOutput: "Full CRUD operations",
              actualOutput: "Missing delete functionality",
              exitCode: 0,
              contributedBy: "Bob Smith",
            },
            {
              id: "7",
              name: "Search Functionality",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.10s",
              input: "Product search with filters",
              expectedOutput: "Accurate search results",
              actualOutput: "Accurate search results",
              exitCode: 0,
              contributedBy: "Charlie Brown",
            },
            {
              id: "8",
              name: "Responsive Design",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.05s",
              input: "Mobile and desktop layouts",
              expectedOutput: "Responsive across devices",
              actualOutput: "Responsive across devices",
              exitCode: 0,
              contributedBy: "Alice Johnson",
            },
            {
              id: "9",
              name: "API Integration",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.22s",
              input: "RESTful API endpoints",
              expectedOutput: "Proper API responses",
              actualOutput: "Proper API responses",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Outstanding leadership and technical contribution to the team project. Excellent frontend development skills and team coordination.",
              icon: "ðŸ¤–",
            },
            {
              type: "collaboration",
              title: "Collaboration Assessment",
              content:
                "Exceptional team leadership and mentoring. Facilitated effective communication and knowledge sharing among team members.",
              icon: "ðŸ‘¥",
            },
            {
              type: "code-quality",
              title: "Code Quality",
              content:
                "High-quality, well-documented code with excellent use of modern web development practices and patterns.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 92,
      totalScore: 100,
      individualContributionScore: 92,
      exerciseContributions: [
        {
          exerciseId: "frontend-development",
          exerciseTitle: "Frontend Development",
          individualScore: 95,
          teamScore: 91,
          contributionPercentage: 88,
          linesOfCode: 1250,
          commits: 28,
          testCasesWritten: 15,
          codeReviews: 8,
          collaborationRating: 4.9,
          specificContributions: [
            "Designed and implemented responsive UI components",
            "Created user authentication flow and forms",
            "Implemented state management with Redux",
            "Led frontend architecture decisions",
            "Mentored team on React best practices",
          ],
        },
        {
          exerciseId: "backend-development",
          exerciseTitle: "Backend Development",
          individualScore: 88,
          teamScore: 92,
          contributionPercentage: 75,
          linesOfCode: 850,
          commits: 18,
          testCasesWritten: 12,
          codeReviews: 5,
          collaborationRating: 4.5,
          specificContributions: [
            "Implemented user authentication API endpoints",
            "Created order management system",
            "Contributed to database schema design",
            "Implemented API security measures",
          ],
        },
        {
          exerciseId: "database-design",
          exerciseTitle: "Database Design",
          individualScore: 92,
          teamScore: 89,
          contributionPercentage: 85,
          linesOfCode: 320,
          commits: 12,
          testCasesWritten: 8,
          codeReviews: 4,
          collaborationRating: 4.7,
          specificContributions: [
            "Designed normalized database schema",
            "Created database migration scripts",
            "Implemented data validation rules",
            "Optimized database queries for performance",
          ],
        },
      ],
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Outstanding overall performance in the session. Demonstrated exceptional leadership and technical skills.",
          icon: "ðŸŒŸ",
        },
      ],
      collaborationFeedback: {
        teamworkScore: 94,
        communicationScore: 96,
        leadershipScore: 92,
        peerReviews: [
          {
            fromStudent: "Bob Smith",
            rating: 5,
            comment:
              "Alice was an amazing team leader. She helped coordinate our work and her frontend skills were incredible. Always willing to help and explain concepts.",
          },
          {
            fromStudent: "Charlie Brown",
            rating: 5,
            comment:
              "Great collaboration throughout the project. Alice's technical expertise and leadership made this project a success.",
          },
          {
            fromStudent: "Diana Prince",
            rating: 4,
            comment:
              "Excellent team player and leader. Alice's contributions to the frontend and overall project coordination were outstanding.",
          },
        ],
      },
      finalScore: 92,
    },
    "4-s2": {
      student: {
        id: "s2",
        name: "Bob Smith",
        email: "bob@example.com",
        matricNumber: "CSC/2021/267",
        avatar: "BS",
        avatarColor: "bg-green-500",
      },
      session: {
        id: "4",
        title: "Web Development Team Project",
        courseCode: "CSC411",
        isCollaborative: true,
        teamSize: 4,
        collaborationType: "GROUP_PROJECT",
      },
      team: {
        id: "team-beta",
        name: "Team Beta",
        members: [
          {
            id: "s1",
            name: "Alice Johnson",
            email: "alice@example.com",
            avatar: "AJ",
            avatarColor: "bg-blue-500",
            role: "LEADER",
            contributionScore: 92,
            peerRating: 4.8,
          },
          {
            id: "s2",
            name: "Bob Smith",
            email: "bob@example.com",
            avatar: "BS",
            avatarColor: "bg-green-500",
            role: "MEMBER",
            contributionScore: 85,
            peerRating: 4.3,
          },
          {
            id: "s3",
            name: "Charlie Brown",
            email: "charlie@example.com",
            avatar: "CB",
            avatarColor: "bg-purple-500",
            role: "MEMBER",
            contributionScore: 78,
            peerRating: 4.1,
          },
          {
            id: "s4",
            name: "Diana Prince",
            email: "diana@example.com",
            avatar: "DP",
            avatarColor: "bg-pink-500",
            role: "MEMBER",
            contributionScore: 88,
            peerRating: 4.5,
          },
        ],
        overallTeamScore: 91,
        collaborationScore: 89,
      },
      submission: {
        id: "SUB-91235",
        submittedAt: "June 10, 2023 at 16:45",
        lastUpdated: "June 10, 2023 at 16:45",
        isTeamSubmission: true,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Full-Stack E-commerce Application",
          description:
            "Collaborative development of a full-stack e-commerce web application with React frontend, Node.js backend, and database integration.",
          testCases: [
            {
              id: "1",
              name: "Product Catalog Display",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.08s",
              input: "Product listing with pagination",
              expectedOutput: "Responsive product grid",
              actualOutput: "Responsive product grid",
              exitCode: 0,
              contributedBy: "Bob Smith",
            },
            {
              id: "2",
              name: "Admin Dashboard",
              status: "Partial",
              score: 7,
              maxScore: 10,
              time: "0.20s",
              input: "Product management interface",
              expectedOutput: "Full CRUD operations",
              actualOutput: "Missing delete functionality",
              exitCode: 0,
              contributedBy: "Bob Smith",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content: "Good contribution to the frontend development. Some areas need improvement in completing features.",
              icon: "ðŸ¤–",
            },
          ],
        },
      ],
      currentScore: 85,
      totalScore: 100,
      individualContributionScore: 85,
      exerciseContributions: [
        {
          exerciseId: "frontend-development",
          exerciseTitle: "Frontend Development",
          individualScore: 82,
          teamScore: 91,
          contributionPercentage: 70,
          linesOfCode: 890,
          commits: 22,
          testCasesWritten: 10,
          codeReviews: 6,
          collaborationRating: 4.2,
          specificContributions: [
            "Implemented product catalog components",
            "Created admin dashboard interface",
            "Worked on responsive design elements",
            "Contributed to component testing",
          ],
        },
      ],
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Good overall performance in the session. Demonstrated good problem-solving skills with some areas for improvement.",
          icon: "ðŸŒŸ",
        },
      ],
      collaborationFeedback: {
        teamworkScore: 85,
        communicationScore: 82,
        leadershipScore: 75,
        peerReviews: [
          {
            fromStudent: "Alice Johnson",
            rating: 4,
            comment: "Bob worked well on the product catalog. Could improve on completing assigned features fully.",
          },
        ],
      },
      finalScore: 85,
    },
    "4-s3": {
      student: {
        id: "s3",
        name: "Charlie Brown",
        email: "charlie@example.com",
        matricNumber: "CSC/2021/289",
        avatar: "CB",
        avatarColor: "bg-purple-500",
      },
      session: {
        id: "4",
        title: "Web Development Team Project",
        courseCode: "CSC411",
        isCollaborative: true,
        teamSize: 4,
        collaborationType: "GROUP_PROJECT",
      },
      team: {
        id: "team-beta",
        name: "Team Beta",
        members: [
          {
            id: "s1",
            name: "Alice Johnson",
            email: "alice@example.com",
            avatar: "AJ",
            avatarColor: "bg-blue-500",
            role: "LEADER",
            contributionScore: 92,
            peerRating: 4.8,
          },
          {
            id: "s2",
            name: "Bob Smith",
            email: "bob@example.com",
            avatar: "BS",
            avatarColor: "bg-green-500",
            role: "MEMBER",
            contributionScore: 85,
            peerRating: 4.3,
          },
          {
            id: "s3",
            name: "Charlie Brown",
            email: "charlie@example.com",
            avatar: "CB",
            avatarColor: "bg-purple-500",
            role: "MEMBER",
            contributionScore: 78,
            peerRating: 4.1,
          },
          {
            id: "s4",
            name: "Diana Prince",
            email: "diana@example.com",
            avatar: "DP",
            avatarColor: "bg-pink-500",
            role: "MEMBER",
            contributionScore: 88,
            peerRating: 4.5,
          },
        ],
        overallTeamScore: 91,
        collaborationScore: 89,
      },
      submission: {
        id: "SUB-91236",
        submittedAt: "June 10, 2023 at 16:45",
        lastUpdated: "June 10, 2023 at 16:45",
        isTeamSubmission: true,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Full-Stack E-commerce Application",
          description:
            "Collaborative development of a full-stack e-commerce web application with React frontend, Node.js backend, and database integration.",
          testCases: [
            {
              id: "1",
              name: "Shopping Cart Functionality",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.12s",
              input: "Add/remove items, quantity updates",
              expectedOutput: "Functional shopping cart",
              actualOutput: "Functional shopping cart",
              exitCode: 0,
              contributedBy: "Charlie Brown",
            },
            {
              id: "2",
              name: "Search Functionality",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.10s",
              input: "Product search with filters",
              expectedOutput: "Accurate search results",
              actualOutput: "Accurate search results",
              exitCode: 0,
              contributedBy: "Charlie Brown",
            },
            {
              id: "3",
              name: "User Profile Management",
              status: "Partial",
              score: 6,
              maxScore: 10,
              time: "0.15s",
              input: "User profile CRUD operations",
              expectedOutput: "Complete profile management",
              actualOutput: "Missing profile picture upload",
              exitCode: 0,
              contributedBy: "Charlie Brown",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content: "Solid contribution to both frontend and backend development. Some features need completion.",
              icon: "ðŸ¤–",
            },
            {
              type: "collaboration",
              title: "Collaboration Assessment",
              content:
                "Good team player with consistent contributions. Could improve communication and feature completion.",
              icon: "ðŸ‘¥",
            },
          ],
        },
      ],
      currentScore: 78,
      totalScore: 100,
      individualContributionScore: 78,
      exerciseContributions: [
        {
          exerciseId: "frontend-development",
          exerciseTitle: "Frontend Development",
          individualScore: 75,
          teamScore: 91,
          contributionPercentage: 65,
          linesOfCode: 720,
          commits: 18,
          testCasesWritten: 8,
          codeReviews: 4,
          collaborationRating: 3.8,
          specificContributions: [
            "Implemented shopping cart functionality",
            "Created search and filter components",
            "Worked on user profile management",
            "Contributed to responsive design testing",
          ],
        },
        {
          exerciseId: "backend-development",
          exerciseTitle: "Backend Development",
          individualScore: 80,
          teamScore: 92,
          contributionPercentage: 70,
          linesOfCode: 450,
          commits: 12,
          testCasesWritten: 6,
          codeReviews: 3,
          collaborationRating: 4.0,
          specificContributions: [
            "Implemented cart management API endpoints",
            "Created search functionality backend",
            "Contributed to user profile API",
          ],
        },
      ],
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Solid overall performance in the session. Demonstrated good problem-solving skills with some areas for improvement.",
          icon: "ðŸŒŸ",
        },
      ],
      collaborationFeedback: {
        teamworkScore: 78,
        communicationScore: 75,
        leadershipScore: 70,
        peerReviews: [
          {
            fromStudent: "Alice Johnson",
            rating: 4,
            comment:
              "Charlie worked consistently on assigned tasks. Could improve on completing features fully and communicating progress better.",
          },
          {
            fromStudent: "Bob Smith",
            rating: 4,
            comment: "Good collaboration on the shopping cart features. Charlie's backend work was helpful.",
          },
        ],
      },
      finalScore: 78,
    },
    "4-s4": {
      student: {
        id: "s4",
        name: "Diana Prince",
        email: "diana@example.com",
        matricNumber: "CSC/2021/312",
        avatar: "DP",
        avatarColor: "bg-pink-500",
      },
      session: {
        id: "4",
        title: "Web Development Team Project",
        courseCode: "CSC411",
        isCollaborative: true,
        teamSize: 4,
        collaborationType: "GROUP_PROJECT",
      },
      team: {
        id: "team-beta",
        name: "Team Beta",
        members: [
          {
            id: "s1",
            name: "Alice Johnson",
            email: "alice@example.com",
            avatar: "AJ",
            avatarColor: "bg-blue-500",
            role: "LEADER",
            contributionScore: 92,
            peerRating: 4.8,
          },
          {
            id: "s2",
            name: "Bob Smith",
            email: "bob@example.com",
            avatar: "BS",
            avatarColor: "bg-green-500",
            role: "MEMBER",
            contributionScore: 85,
            peerRating: 4.3,
          },
          {
            id: "s3",
            name: "Charlie Brown",
            email: "charlie@example.com",
            avatar: "CB",
            avatarColor: "bg-purple-500",
            role: "MEMBER",
            contributionScore: 78,
            peerRating: 4.1,
          },
          {
            id: "s4",
            name: "Diana Prince",
            email: "diana@example.com",
            avatar: "DP",
            avatarColor: "bg-pink-500",
            role: "MEMBER",
            contributionScore: 88,
            peerRating: 4.5,
          },
        ],
        overallTeamScore: 91,
        collaborationScore: 89,
      },
      submission: {
        id: "SUB-91237",
        submittedAt: "June 10, 2023 at 16:45",
        lastUpdated: "June 10, 2023 at 16:45",
        isTeamSubmission: true,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Full-Stack E-commerce Application",
          description:
            "Collaborative development of a full-stack e-commerce web application with React frontend, Node.js backend, and database integration. Focus on payment processing and API integration.",
          testCases: [
            {
              id: "1",
              name: "Payment Processing",
              status: "Passed",
              score: 15,
              maxScore: 15,
              time: "0.25s",
              input: "Stripe payment integration",
              expectedOutput: "Secure payment flow",
              actualOutput: "Secure payment flow",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
            {
              id: "2",
              name: "API Integration",
              status: "Passed",
              score: 10,
              maxScore: 10,
              time: "0.22s",
              input: "RESTful API endpoints",
              expectedOutput: "Proper API responses",
              actualOutput: "Proper API responses",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
            {
              id: "3",
              name: "Email Notifications",
              status: "Passed",
              score: 8,
              maxScore: 8,
              time: "0.18s",
              input: "Order confirmation emails",
              expectedOutput: "Email sent successfully",
              actualOutput: "Email sent successfully",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
            {
              id: "4",
              name: "Inventory Management",
              status: "Passed",
              score: 12,
              maxScore: 12,
              time: "0.14s",
              input: "Stock tracking and updates",
              expectedOutput: "Accurate inventory tracking",
              actualOutput: "Accurate inventory tracking",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
            {
              id: "5",
              name: "Error Handling",
              status: "Partial",
              score: 7,
              maxScore: 10,
              time: "0.12s",
              input: "Payment failure scenarios",
              expectedOutput: "Graceful error handling",
              actualOutput: "Some edge cases not handled",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
            {
              id: "6",
              name: "Security Validation",
              status: "Passed",
              score: 9,
              maxScore: 10,
              time: "0.16s",
              input: "Input validation and sanitization",
              expectedOutput: "Secure data handling",
              actualOutput: "Secure data handling",
              exitCode: 0,
              contributedBy: "Diana Prince",
            },
          ],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content:
                "Excellent backend development skills with strong focus on payment processing and API integration. Outstanding technical contribution to the team.",
              icon: "ðŸ¤–",
            },
            {
              type: "collaboration",
              title: "Collaboration Assessment",
              content:
                "Strong team collaboration with excellent technical expertise. Provided valuable guidance on backend architecture and security best practices.",
              icon: "ðŸ‘¥",
            },
            {
              type: "code-quality",
              title: "Code Quality",
              content:
                "High-quality, secure code with excellent error handling and documentation. Strong understanding of payment processing and API design.",
              icon: "ðŸ’»",
            },
          ],
        },
      ],
      currentScore: 88,
      totalScore: 100,
      individualContributionScore: 88,
      exerciseContributions: [
        {
          exerciseId: "backend-development",
          exerciseTitle: "Backend Development",
          individualScore: 92,
          teamScore: 92,
          contributionPercentage: 85,
          linesOfCode: 1150,
          commits: 24,
          testCasesWritten: 18,
          codeReviews: 7,
          collaborationRating: 4.6,
          specificContributions: [
            "Implemented complete payment processing system",
            "Created comprehensive API endpoints",
            "Designed email notification system",
            "Implemented inventory management logic",
            "Added security validation and error handling",
          ],
        },
        {
          exerciseId: "database-design",
          exerciseTitle: "Database Design",
          individualScore: 85,
          teamScore: 89,
          contributionPercentage: 80,
          linesOfCode: 280,
          commits: 14,
          testCasesWritten: 10,
          codeReviews: 5,
          collaborationRating: 4.4,
          specificContributions: [
            "Designed payment and order tables",
            "Created inventory tracking schema",
            "Implemented database triggers for stock updates",
            "Optimized queries for payment processing",
          ],
        },
        {
          exerciseId: "api-integration",
          exerciseTitle: "API Integration",
          individualScore: 90,
          teamScore: 88,
          contributionPercentage: 90,
          linesOfCode: 650,
          commits: 16,
          testCasesWritten: 12,
          codeReviews: 6,
          collaborationRating: 4.7,
          specificContributions: [
            "Integrated Stripe payment gateway",
            "Implemented email service integration",
            "Created webhook handlers for payment events",
            "Added comprehensive API documentation",
            "Implemented rate limiting and security measures",
          ],
        },
      ],
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content:
            "Outstanding overall performance in the session. Demonstrated exceptional leadership and technical skills.",
          icon: "ðŸŒŸ",
        },
      ],
      collaborationFeedback: {
        teamworkScore: 88,
        communicationScore: 90,
        leadershipScore: 85,
        peerReviews: [
          {
            fromStudent: "Alice Johnson",
            rating: 5,
            comment:
              "Diana's expertise in backend development and payment processing was invaluable. She provided excellent technical guidance and her code quality was outstanding.",
          },
          {
            fromStudent: "Bob Smith",
            rating: 4,
            comment:
              "Great collaboration on the backend features. Diana's payment integration work was complex and well-implemented.",
          },
          {
            fromStudent: "Charlie Brown",
            rating: 4,
            comment:
              "Diana was very helpful with backend questions and her API documentation made integration much easier for the frontend team.",
          },
        ],
      },
      finalScore: 88,
    },
    "4-s5": {
      student: {
        id: "s5",
        name: "Edward Norton",
        email: "edward@example.com",
        matricNumber: "CSC/2021/345",
        avatar: "EN",
        avatarColor: "bg-yellow-500",
      },
      session: {
        id: "4",
        title: "Web Development Team Project",
        courseCode: "CSC411",
        isCollaborative: true,
        teamSize: 4,
        collaborationType: "GROUP_PROJECT",
      },
      team: {
        id: "team-beta",
        name: "Team Beta",
        members: [
          {
            id: "s1",
            name: "Alice Johnson",
            email: "alice@example.com",
            avatar: "AJ",
            avatarColor: "bg-blue-500",
            role: "LEADER",
            contributionScore: 92,
            peerRating: 4.8,
          },
          {
            id: "s2",
            name: "Bob Smith",
            email: "bob@example.com",
            avatar: "BS",
            avatarColor: "bg-green-500",
            role: "MEMBER",
            contributionScore: 85,
            peerRating: 4.3,
          },
          {
            id: "s3",
            name: "Charlie Brown",
            email: "charlie@example.com",
            avatar: "CB",
            avatarColor: "bg-purple-500",
            role: "MEMBER",
            contributionScore: 78,
            peerRating: 4.1,
          },
          {
            id: "s4",
            name: "Diana Prince",
            email: "diana@example.com",
            avatar: "DP",
            avatarColor: "bg-pink-500",
            role: "MEMBER",
            contributionScore: 88,
            peerRating: 4.5,
          },
          {
            id: "s5",
            name: "Edward Norton",
            email: "edward@example.com",
            avatar: "EN",
            avatarColor: "bg-yellow-500",
            role: "MEMBER",
            contributionScore: 0,
            peerRating: 0,
          },
        ],
        overallTeamScore: 91,
        collaborationScore: 89,
      },
      submission: {
        id: "SUB-91238",
        submittedAt: "June 10, 2023 at 16:45",
        lastUpdated: "June 10, 2023 at 16:45",
        isTeamSubmission: true,
      },
      exercises: [
        {
          id: "exercise-1",
          title: "Full-Stack E-commerce Application",
          description:
            "Collaborative development of a full-stack e-commerce web application with React frontend, Node.js backend, and database integration. Focus on payment processing and API integration.",
          testCases: [],
          feedback: [
            {
              type: "auto-generated",
              title: "Auto-Generated Feedback",
              content: "No submission has been received yet. Grading is pending.",
              icon: "ðŸ¤–",
            },
            {
              type: "collaboration",
              title: "Collaboration Assessment",
              content: "Student has not actively participated in the team project yet.",
              icon: "ðŸ‘¥",
            },
          ],
        },
      ],
      currentScore: 0,
      totalScore: 100,
      individualContributionScore: 0,
      exerciseContributions: [],
      overallFeedback: [
        {
          type: "auto-generated",
          title: "Overall Auto-Generated Feedback",
          content: "No submission has been received yet. Overall grading is pending.",
          icon: "ðŸŒŸ",
        },
      ],
      collaborationFeedback: {
        teamworkScore: 0,
        communicationScore: 0,
        leadershipScore: 0,
        peerReviews: [],
      },
      finalScore: 0,
    },
  }

  return gradingData[`${sessionId}-${studentId}`]
}

export default function IndividualGradingPage({ params }: IndividualGradingPageProps) {
  const gradingData = getStudentGradingData(params.id, params.studentId)

  if (!gradingData) {
    notFound()
  }

  return (
    <>
      <Header
        title="Student Submission Review"
        description="Review and grade individual student submission"
        breadcrumbs={[
          { label: "Sessions", href: "/sessions" },
          { label: `Session ${params.id}`, href: `/sessions/${params.id}` },
          { label: "Grading", href: `/sessions/${params.id}/grading` },
          { label: gradingData.student.name, href: "#" },
        ]}
      />
      <div className="flex-1 overflow-y-auto">
        <IndividualGradingContent data={gradingData} />
      </div>
    </>
  )
}
