"""First migration

Revision ID: e72d0029bde0
Revises: 
Create Date: 2025-08-18 15:20:19.747739

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision = 'e72d0029bde0'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admin',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('is_super_admin', sa.Boolean(), nullable=False),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_admin_email'), 'admin', ['email'], unique=True)
    op.create_table('workertask',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('task_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('labels', sa.JSON(), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('cancellation_reason', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('prevent_concurrency', sa.Boolean(), nullable=False),
    sa.Column('concurrency_key', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('competing_task_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['competing_task_id'], ['workertask.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('languageimage',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('version', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('base_image', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('docker_image_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('status', sa.Enum('created', 'building', 'build_succeeded', 'build_failed', 'testing', 'testing_failed', 'scheduled_for_prune', 'scheduled_for_rebuild', 'scheduled_for_deletion', 'available', 'unavailable', 'failed', name='imagestatus'), nullable=False),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('build_logs', sa.JSON(), nullable=True),
    sa.Column('push_logs', sa.JSON(), nullable=True),
    sa.Column('failure_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('test_build', sa.Boolean(), nullable=False),
    sa.Column('file_extension', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('build_test_file_content', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('build_test_std_in', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('build_test_std_out', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('requires_compilation', sa.Boolean(), nullable=False),
    sa.Column('compile_file_extension', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('compilation_command', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('default_execution_command', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('entrypoint_script', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('image_size', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('image_architecture', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['created_by_id'], ['admin.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('session',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('admin_id', sa.Uuid(), nullable=False),
    sa.Column('status', sa.Text(), nullable=True),
    sa.Column('initialization_stage', sa.Text(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('collaboration_enabled', sa.Boolean(), nullable=False),
    sa.Column('collaboration_group_size', sa.Integer(), nullable=False),
    sa.Column('collaboration_group_open', sa.Boolean(), nullable=False),
    sa.Column('enrollment_method', sa.Text(), nullable=True),
    sa.Column('enrollment_link_ttl', sa.Integer(), nullable=False),
    sa.Column('invitation_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('language_image_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['admin.id'], ),
    sa.ForeignKeyConstraint(['language_image_id'], ['languageimage.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_session_invitation_id'), 'session', ['invitation_id'], unique=False)
    op.create_table('exercise',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=False),
    sa.Column('instructions', sqlmodel.sql.sqltypes.AutoString(length=10000), nullable=True),
    sa.Column('score_percentage', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('group',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('docker_container_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessioninvitation',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('matric_no', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('expired', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sessioninvitation_matric_no'), 'sessioninvitation', ['matric_no'], unique=False)
    op.create_table('sessionreasourceconfig',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('max_queue_size', sa.Integer(), nullable=False),
    sa.Column('max_number_of_runs', sa.Integer(), nullable=False),
    sa.Column('wall_time_limit', sa.Integer(), nullable=False),
    sa.Column('cpu_time_limit', sa.Integer(), nullable=False),
    sa.Column('memory_limit', sa.Integer(), nullable=False),
    sa.Column('max_processes_and_or_threads', sa.Integer(), nullable=False),
    sa.Column('enable_network', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exerciseevaluationflag',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('flag', sa.Text(), nullable=True),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('score_percentage', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('student',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('docker_container_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('matric_number', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_student_email'), 'student', ['email'], unique=True)
    op.create_index(op.f('ix_student_matric_number'), 'student', ['matric_number'], unique=True)
    op.create_table('testcase',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('visible', sa.Boolean(), nullable=False),
    sa.Column('test_input', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('expected_output', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('score_percentage', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exercisesubmission',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('worker_task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('entry_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('student_id', sa.Uuid(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('graded', sa.Boolean(), nullable=False),
    sa.Column('total_score', sa.Float(), nullable=True),
    sa.Column('auto_generated_feedback', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('manual_feedback', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('status', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('sessionenrollment',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('session_id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('student_id', sa.Uuid(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('is_group_leader', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['session_id'], ['session.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('worker_task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('entry_file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('exercise_id', sa.Uuid(), nullable=False),
    sa.Column('student_id', sa.Uuid(), nullable=True),
    sa.Column('group_id', sa.Uuid(), nullable=True),
    sa.Column('execution_logs', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('queued', 'executing', 'executed', 'dropped', 'cancelled', name='taskstatus'), nullable=False),
    sa.Column('results', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['student_id'], ['student.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('evaluationflagresult',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('submission_id', sa.Uuid(), nullable=False),
    sa.Column('evaluation_flag_id', sa.Uuid(), nullable=False),
    sa.Column('passed', sa.Boolean(), nullable=False),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('adjusted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['evaluation_flag_id'], ['exerciseevaluationflag.id'], ),
    sa.ForeignKeyConstraint(['submission_id'], ['exercisesubmission.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('testcaseresult',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('submission_id', sa.Uuid(), nullable=False),
    sa.Column('test_case_id', sa.Uuid(), nullable=False),
    sa.Column('passed', sa.Boolean(), nullable=False),
    sa.Column('execution_result', sa.JSON(), nullable=True),
    sa.Column('adjusted', sa.Boolean(), nullable=False),
    sa.Column('auto_generated_feedback', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.Column('manual_feedback', sqlmodel.sql.sqltypes.AutoString(length=5000), nullable=True),
    sa.ForeignKeyConstraint(['submission_id'], ['exercisesubmission.id'], ),
    sa.ForeignKeyConstraint(['test_case_id'], ['testcase.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('testcaseresult')
    op.drop_table('evaluationflagresult')
    op.drop_table('task')
    op.drop_table('sessionenrollment')
    op.drop_table('exercisesubmission')
    op.drop_table('testcase')
    op.drop_index(op.f('ix_student_matric_number'), table_name='student')
    op.drop_index(op.f('ix_student_email'), table_name='student')
    op.drop_table('student')
    op.drop_table('exerciseevaluationflag')
    op.drop_table('sessionreasourceconfig')
    op.drop_index(op.f('ix_sessioninvitation_matric_no'), table_name='sessioninvitation')
    op.drop_table('sessioninvitation')
    op.drop_table('group')
    op.drop_table('exercise')
    op.drop_index(op.f('ix_session_invitation_id'), table_name='session')
    op.drop_table('session')
    op.drop_table('languageimage')
    op.drop_table('workertask')
    op.drop_index(op.f('ix_admin_email'), table_name='admin')
    op.drop_table('admin')
    # ### end Alembic commands ###
